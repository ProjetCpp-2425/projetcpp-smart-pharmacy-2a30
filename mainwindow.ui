<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1303</width>
    <height>653</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
	background-color:rgb(82, 82, 82);
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QWidget" name="center_menu_widget" native="true">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>140</y>
      <width>141</width>
      <height>461</height>
     </rect>
    </property>
    <property name="sizePolicy">
     <sizepolicy hsizetype="Preferred" vsizetype="Minimum">
      <horstretch>0</horstretch>
      <verstretch>0</verstretch>
     </sizepolicy>
    </property>
    <property name="font">
     <font>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #3d3d3d;  /* Dark background */
    color: #ffffff;  /* White text */
    border: 3px solid #00ff00;  /* Orange border */
    border-radius: 5px;  /* Slight border radius */
    padding: 10px;  /* Internal padding */
    transition: background-color 0.3s ease, border-color 0.3s ease;  /* Smooth transition for background and border */
}


QWidget:disabled {
    background-color: #2b2b2b;  /* Darker background when disabled */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}</string>
    </property>
    <layout class="QVBoxLayout" name="verticalLayout">
     <property name="spacing">
      <number>8</number>
     </property>
     <property name="leftMargin">
      <number>0</number>
     </property>
     <property name="rightMargin">
      <number>3</number>
     </property>
     <item>
      <widget class="QPushButton" name="title_music_pushButton_2">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Employees</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="title_live_pushButton_2">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Patients</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="title_listenBook_pushButton">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Orders</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="title_live_pushButton_3">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Suppliers</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="title_found_pushButton">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Sales</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="title_live_pushButton_4">
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>30</height>
        </size>
       </property>
       <property name="font">
        <font>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}

/* Focus effect */
QPushButton:focus {
    background-color: #18465d;  /* Dark blue background on focus */
    color: #ffffff;  /* White text on focus */
    border-color: #18465d;  /* Blue border on focus */
}

/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
       </property>
       <property name="text">
        <string>Prescription</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="autoExclusive">
        <bool>true</bool>
       </property>
      </widget>
     </item>
    </layout>
   </widget>
   <widget class="QFrame" name="frame_2">
    <property name="geometry">
     <rect>
      <x>140</x>
      <y>0</y>
      <width>1161</width>
      <height>601</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QFrame {
    background-color: #3d3d3d;  /* Dark background */
    border-style: solid;
    border-width: 2px;  /* Border thickness */
    border-color: #00ff00;  /* Orange border */
    border-radius: 7px;  /* Rounded corners */
    padding: 5px;  /* Internal padding */
}

/* Optional: Hover effect for QFrame */
QFrame:hover {
    border-color: #2d89ef;  /* Blue border on hover */
}</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QTableView" name="tableView">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>110</y>
       <width>1011</width>
       <height>371</height>
      </rect>
     </property>
    </widget>
    <widget class="QPushButton" name="pb_select">
     <property name="geometry">
      <rect>
       <x>180</x>
       <y>510</y>
       <width>151</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>Edit</string>
     </property>
    </widget>
    <widget class="QComboBox" name="cb_tri">
     <property name="geometry">
      <rect>
       <x>650</x>
       <y>70</y>
       <width>112</width>
       <height>31</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <pointsize>8</pointsize>
       <bold>true</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">QComboBox {
    background-color: #3d3d3d;  /* Same dark background as QTableWidget */
    color: #ffffff;  /* White text like in QTableWidget */
    border: 3px solid #00ff00;  /* Same border color and width as QTableWidget */
    padding: 5px;
    border-radius: 5px;  /* Slight border radius to make it look sleek */
    transition: background-color 0.3s ease, border-color 0.3s ease;  /* Animation for background and border */
}

/* ComboBox Hover/Focus effect */
QComboBox:hover {
    background-color: #2d89ef;  /* Change background to blue on hover/focus */
    border-color: #2d89ef;  /* Change border to blue on hover/focus */
}

/* ComboBox dropdown menu */
QComboBox QAbstractItemView {
    background-color: #3d3d3d;  /* Dark background for dropdown */
    color: #ffffff;  /* White text for dropdown items */
    border: 3px solid #00ff00;  /* Same border as the QComboBox */
    selection-background-color: #00ff00;  /* Same selection color as QTableWidget */
    selection-color: #ffffff;  /* White text when an item is selected */
}

/* ComboBox individual items */
QComboBox::item {
    background-color: #3d3d3d;  /* Dark background for items */
    color: #ffffff;  /* White text */
    padding: 5px;  /* Padding for item spacing */
}

/* ComboBox dropdown arrow */
QComboBox::down-arrow {
    image: url(:/resources/dropdown_arrow.png);  /* Custom arrow if needed */
    width: 12px;
    height: 12px;
}

/* ComboBox dropdown arrow button */
QComboBox::drop-down {
    background-color: #3d3d3d;  /* Dark background for the arrow area */
    border-left: 3px solid #00ff00;  /* Same left border as QComboBox */
}

/* Optional: Animation for dropdown menu opening */
QComboBox QAbstractItemView {
    background-color: #3d3d3d;  /* Dark background for dropdown */
    color: #ffffff;  /* White text for dropdown items */
    border: 3px solid #00ff00;  /* Same border as the QComboBox */
    selection-background-color: #00ff00;  /* Same selection color as QTableWidget */
    selection-color: #ffffff;  /* White text when an item is selected */
    transition: background-color 0.3s ease, border-color 0.3s ease;  /* Smooth transitions */
}</string>
     </property>
     <item>
      <property name="text">
       <string>CIN</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Name</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Hiring Date</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Salary</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Birthday</string>
      </property>
     </item>
    </widget>
    <widget class="QRadioButton" name="rb_asc">
     <property name="geometry">
      <rect>
       <x>780</x>
       <y>70</y>
       <width>95</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QCheckBox {
	color:rgb(223,219,210);
	padding: 2px;
}
QCheckBox:hover {
	border-radius:4px;
	border-style:solid;
	padding-left: 1px;
	padding-right: 1px;
	padding-bottom: 1px;
	padding-top: 1px;
	border-width:1px;
	border-color: rgb(87, 97, 106);
	background-color:qlineargradient(spread:pad, x1:0.5, y1:0.7, x2:0.5, y2:0.3, stop:0 rgba(87, 97, 106, 150), stop:1 rgba(93, 103, 113, 150));
}
QCheckBox::indicator:checked {
	border-radius:4px;
	border-style:solid;
	border-width:1px;
	border-color: rgb(180,180,180);
  	background-color:qlineargradient(spread:pad, x1:0.5, y1:0.7, x2:0.5, y2:0.3, stop:0 rgba(87, 97, 106, 255), stop:1 rgba(93, 103, 113, 255));
}
QCheckBox::indicator:unchecked {
	border-radius:4px;
	border-style:solid;
	border-width:1px;
	border-color: rgb(87, 97, 106);
  	background-color:rgb(255,255,255);
}</string>
     </property>
     <property name="text">
      <string>ASC</string>
     </property>
    </widget>
    <widget class="QRadioButton" name="rb_desc">
     <property name="geometry">
      <rect>
       <x>880</x>
       <y>70</y>
       <width>95</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QCheckBox {
	color:rgb(223,219,210);
	padding: 2px;
}
QCheckBox:hover {
	border-radius:4px;
	border-style:solid;
	padding-left: 1px;
	padding-right: 1px;
	padding-bottom: 1px;
	padding-top: 1px;
	border-width:1px;
	border-color: rgb(87, 97, 106);
	background-color:qlineargradient(spread:pad, x1:0.5, y1:0.7, x2:0.5, y2:0.3, stop:0 rgba(87, 97, 106, 150), stop:1 rgba(93, 103, 113, 150));
}
QCheckBox::indicator:checked {
	border-radius:4px;
	border-style:solid;
	border-width:1px;
	border-color: rgb(180,180,180);
  	background-color:qlineargradient(spread:pad, x1:0.5, y1:0.7, x2:0.5, y2:0.3, stop:0 rgba(87, 97, 106, 255), stop:1 rgba(93, 103, 113, 255));
}
QCheckBox::indicator:unchecked {
	border-radius:4px;
	border-style:solid;
	border-width:1px;
	border-color: rgb(87, 97, 106);
  	background-color:rgb(255,255,255);
}</string>
     </property>
     <property name="text">
      <string>DESC</string>
     </property>
    </widget>
    <widget class="QPushButton" name="btnSearchPupils">
     <property name="geometry">
      <rect>
       <x>350</x>
       <y>510</y>
       <width>151</width>
       <height>30</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>0</width>
       <height>30</height>
      </size>
     </property>
     <property name="cursor">
      <cursorShape>PointingHandCursor</cursorShape>
     </property>
     <property name="toolTip">
      <string>Найти учеников по ФИО</string>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>Search</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/search.png</normaloff>:/icons/img/search.png</iconset>
     </property>
    </widget>
    <widget class="QPushButton" name="btnRemoveClass">
     <property name="geometry">
      <rect>
       <x>520</x>
       <y>510</y>
       <width>151</width>
       <height>30</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>0</width>
       <height>30</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>Remove</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/delete.png</normaloff>:/icons/img/delete.png</iconset>
     </property>
    </widget>
    <widget class="QPushButton" name="btnAddClass">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>510</y>
       <width>151</width>
       <height>30</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>0</width>
       <height>30</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>Add</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/add.png</normaloff>:/icons/img/add.png</iconset>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_26">
     <property name="geometry">
      <rect>
       <x>1040</x>
       <y>510</y>
       <width>40</width>
       <height>40</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>40</width>
       <height>40</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>40</width>
       <height>40</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="icon">
      <iconset resource="Resources/img.qrc">
       <normaloff>:/icons/img/printer.png</normaloff>:/icons/img/printer.png</iconset>
     </property>
     <property name="iconSize">
      <size>
       <width>25</width>
       <height>25</height>
      </size>
     </property>
    </widget>
    <widget class="QTableWidget" name="tableWidget">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>110</y>
       <width>1061</width>
       <height>371</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QTableWidget Styling */
QTableWidget {
    background-color: #3d3d3d; /* Dark background */
    color: #fff; /* White text */
    selection-background-color: #00ff00; /* Orange selection color */
    border: none; /* Remove outer border */
    gridline-color: #888888; /* Softer gray gridlines */
    font-size: 14px; /* Adjust font size for readability */
    padding: 0px; /* Remove any extra padding around the table */
}

/* Header Styling */
QHeaderView::section {
    background-color: #2b2b2b; /* Darker background for headers */
    color: #ffffff; /* White text */
    border-style: none; /* Remove borders between header sections */
    padding: 8px; /* Adjust padding for better spacing */
    font-weight: bold; /* Make header text bold */
    text-align: center; /* Center align the header text */
}

/* Adjusting Row and Column Header Appearance */
QTableWidget::horizontalHeader {
    background-color: #2b2b2b; /* Ensure header background color matches */
    color: #ffffff; /* Keep the text white */
    border: none; /* Remove border */
    height: 30px; /* Adjust height if needed */
}

QTableWidget::verticalHeader {
    background-color: #2b2b2b; /* Ensure header background color matches */
    color: #ffffff; /* Keep the text white */
    border: none; /* Remove border */
    width: 30px; /* Adjust width if needed */
}

/* Cell Styling */
QTableWidget::item {
    padding: 8px; /* Add padding inside table cells for better layout */
    background-color: #3d3d3d; /* Default background for cells */
}

/* Alternating Row Colors */
QTableWidget::item:nth-child(even) {
    background-color: #444444; /* Slightly lighter color for alternating rows */
}

/* Selected Item */
QTableWidget::item:selected {
    background-color: #00ff00; /* Orange background for selected row */
    color: #ffffff; /* Ensure the text remains white and readable */
}

/* Hover Effect for Table Rows */
QTableWidget::item:hover {
    background-color: #555555; /* Darker background when hovering */
}

/* Remove Focus Outline from Selected Cells */
QTableWidget::item:focus {
    outline: none;
}
</string>
     </property>
     <property name="rowCount">
      <number>7</number>
     </property>
     <property name="columnCount">
      <number>9</number>
     </property>
     <row>
      <property name="text">
       <string>Staff1</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff2</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff3</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff4</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff5</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff6</string>
      </property>
     </row>
     <row>
      <property name="text">
       <string>Staff7</string>
      </property>
     </row>
     <column>
      <property name="text">
       <string>ID</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>CIN</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Name</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Hiring Date</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Role</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Salary</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Birthday</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Mail</string>
      </property>
     </column>
     <column>
      <property name="text">
       <string>Phone</string>
      </property>
     </column>
    </widget>
    <widget class="QPushButton" name="title_live_pushButton_5">
     <property name="geometry">
      <rect>
       <x>960</x>
       <y>70</y>
       <width>118</width>
       <height>30</height>
      </rect>
     </property>
     <property name="minimumSize">
      <size>
       <width>50</width>
       <height>30</height>
      </size>
     </property>
     <property name="font">
      <font>
       <bold>true</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">/* QPushButton Styling */
QPushButton {
    border-style: solid;
    background-color: #3d3d3d;  /* Same dark background */
    color: #fff;  /* White text */
    border-radius: 7px;  /* Rounded corners */
    border-width: 2px;  /* Set border width */
    border-color: #00ff00;  /* Orange border */
    padding: 8px 15px;  /* Padding for button spacing */
    outline: none; /* Remove default focus outline */
}

/* Hover effect */
QPushButton:hover {
    color: #ccc;  /* Light gray text on hover */
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(45, 45, 45, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background */
    border-color: #2d89ef;  /* Blue border on hover */
}

/* Pressed/Clicked effect (with border unchanged) */
QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.517, y2:1, stop:0 rgba(29, 29, 29, 255), stop:0.505682 rgba(45, 45, 45, 255), stop:1 rgba(29, 29, 29, 255));  /* Darker background on press */
    border-color: #da532c;  /* Keep the orange border when pressed */
    border-width: 2px;  /* Keep the border width */
}


/* Checked/Pressed button stays in this state */
QPushButton:checked {
    background-color: #76797C;  /* Grayish background when checked */
    border-color: #6A6969;  /* Gray border when checked */
    color: #ffffff;  /* White text when checked */
}

/* Disabled Button */
QPushButton:disabled {
    background-color: #2b2b2b;  /* Darker background for disabled button */
    color: #aaaaaa;  /* Gray text when disabled */
    border-color: #555555;  /* Lighter border when disabled */
}
</string>
     </property>
     <property name="text">
      <string>Trie</string>
     </property>
     <property name="checkable">
      <bool>true</bool>
     </property>
     <property name="autoExclusive">
      <bool>true</bool>
     </property>
    </widget>
    <widget class="QLineEdit" name="chercher">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>20</y>
       <width>411</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLineEdit {
	border-width: 1px; border-radius: 4px;
	border-color: rgb(58, 58, 58);
	border-style: inset;
	padding: 0 8px;
	color: rgb(255, 255, 255);
	background:rgb(100, 100, 100);
	selection-background-color: rgb(187, 187, 187);
	selection-color: rgb(60, 63, 65);
}</string>
     </property>
    </widget>
    <zorder>chercher</zorder>
    <zorder>tableView</zorder>
    <zorder>pb_select</zorder>
    <zorder>cb_tri</zorder>
    <zorder>rb_asc</zorder>
    <zorder>rb_desc</zorder>
    <zorder>btnSearchPupils</zorder>
    <zorder>btnRemoveClass</zorder>
    <zorder>btnAddClass</zorder>
    <zorder>pushButton_26</zorder>
    <zorder>tableWidget</zorder>
    <zorder>title_live_pushButton_5</zorder>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1303</width>
     <height>25</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources>
  <include location="Resources/img.qrc"/>
 </resources>
 <connections/>
</ui>
